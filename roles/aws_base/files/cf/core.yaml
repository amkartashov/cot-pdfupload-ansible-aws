AWSTemplateFormatVersion: 2010-09-09
Description: Core Infrastructure
Parameters:
  NameTag:
    Type: String
    Default: ansible
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2-VPC KeyPair
  VpcCIDR:
    Type: String
    Default: 10.0.0.0/16
    Description: VPC CIDR block (required for creating NAT security group rules for NATing traffic).
  PublicSubnetACIDR:
    Type: String
    Default: 10.0.0.0/24
    Description: Address range for a public-A subnet.
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: !Ref VpcCIDR
      Tags:
        - Key: Name
          Value: !Ref NameTag
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  GatewayToInternet:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      Tags:
        - Key: Name
          Value: !Join [-, [public, !Ref NameTag, !Select [0, !GetAZs ]]]
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetACIDR
      AvailabilityZone: !Select [0, !GetAZs ] 
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub public-routes-${NameTag}
  PublicSubnetARTAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTable
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
Outputs:
  VPCId:
    Description: VPCId of the created VPC
    Value: !Ref VPC
    Export: 
      Name : !Sub ${AWS::StackName}-VPCID
  PublicSubnetA:
    Description: Id of created subnet
    Value: !Ref PublicSubnetA
    Export: 
      Name : !Sub ${AWS::StackName}-PublicSubnetA
